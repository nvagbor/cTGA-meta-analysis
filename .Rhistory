# blankPlot(c(0,100),c(0,100), mainfont)
par(xpd=NA)
# Make forest plot --
n_forest   <- length(forest)
# Plot setting --
spacing    <- 0
plot.width <- 25
# plot labels --
xaxmin=33
xaxmax=xaxmin + plot.width
#x position for other headings
other.column.xpos <- c(xaxmin-16, xaxmin-8, xaxmax+16, xaxmax+23, xaxmax+30)
outcomeLabs <- c("A. Mortality", "B. Reintervention")
# Draw forest plot --
locs <- list()
for (cc in seq_along(forest)) {
blankPlot(c(0,100),c(0,100), mainfont)
locs[[cc]] <-
ForestBasic(
forest[[cc]],
LogScale          = FALSE,
ExponentiateDataOnPlot=FALSE,
xaxmin            = xaxmin,
xaxmax            = xaxmax,
xlim              = c(-5, 65),
xticks            = seq(0, 60, 10),
xticks.ticklength = 0.25,
xlab              = c("", "Incidence (%)")[cc],
NLabel            = FALSE,
mainfont          = 1,
ValueLabels       = TRUE,
ValueLabelsHeader = "Incidence (95% CI)\n",
ValueDigits       = 1,
lwd               = 1,
CISecond          = TRUE,
separator         = " - ",
spacing           = spacing,
pointGroupsFactor = 0.9,
verbose           = FALSE,
# boxsizeoverride   = FALSE,
boxparm.stderr    = 2)
# add titles above forest (may be left empty, change labels="" to what you will)
# Draw segment --
segments(
x0  = 0,
x1  = 94,
y0  = 98.4,
y1  = 98.4,
lwd = 1.3,
xpd = FALSE)
#Outcome label --
text(x      = 0,
y      = 117,
labels = outcomeLabs[cc],
col    = "black",
adj    = c(0,0),
font   = 2,
cex    = 1.1)
# left hand column of labels
text(x=0, y=100, labels="Endpoints\n", adj=c(0,0), font=2, cex=1)
text(x=0, y=locs[[cc]]$YLocs, adj=0, cex=1, font=ifelse(forest[[cc]]$IsDiamond, 2,1), labels=left.labels[-blank.rows])
text(x=0, y=locs[[cc]]$BlankLocs, adj=0, font=2, cex=1, labels=left.labels[blank.rows])
# adding other columns for HF and PHD ---
for (jj in seq_along(other.cols)) {
text(x=other.column.xpos[jj], y=105.5, adj=c(0,0), font=2, cex=1, labels=convertUnicode(other.cols.labels[jj]))
text(x      = other.column.xpos[jj],
y      = locs[[cc]]$YLocs,
font   = ifelse(forest[[cc]]$IsDiamond, 2, 1),
adj    = 0,
cex    = 1,
labels = convertUnicode(as.character(merged_forest[[cc]][,other.cols[jj]]))[-blank.rows])
text(x      = other.column.xpos[jj],
y      = locs[[cc]]$BlankLocs,
adj    = 0,
cex    = 1,
labels = convertUnicode(as.character(merged_forest[[cc]][,other.cols[jj]]))[blank.rows])
}
}
# stop writing to file
closeFile(type)
# Get and bind data for anatomic and physio only
dso_rastelli <- map(
.x=summary_forest,
~flatten_df(.x) %>% mutate(n_event=paste0(n, "/", N)) %>%
filter(surgery%in%c("DSO", "Rastelli")))
dso_rastelli <- map(
.x = dso_rastelli,
~add_table_header(
data=.x,
group_var=surgery,
group_level_var=time,
extra_space=FALSE) %>%
select(-Endpoint) %>%
dplyr::mutate(
IsDiamond=ifelse(!is.na(incidence), 0, incidence),
FillColour=ifelse(!is.na(incidence)==TRUE, 1, incidence)) %>%
rename(Heading=time) %>%
as.data.frame(.)
)
# set up an object that stores the forest and associated metadata
forest <- map2(
.x=dso_rastelli,
.y=seq_along(dso_rastelli),
~FormatForest(
rawdata=rename(.x,
!!paste0("IsDiamond", .y):=IsDiamond,
!!paste0("FillColour", .y):=FillColour),
forest.n    = .y,
EstimateCol = "incidence",
LCICol      = "LCI",
UCICol      = "UCI",
logData     = FALSE,
getBlanks   = TRUE)
)
blank.rows  <- forest[[1]]$blank.rows
# Format headings to incorporate expressions ------
# find labels to put in the left most column
left.labels <- convertUnicode(as.character(dso_rastelli[[1]]$Heading))
# what other columns should be plotted
other.cols  <- c("n_studies", "n_event", "I2", "tau2", "phet")
other.cols.labels <- c("Studies", "n/N", "I\U00B2", "Tau\U00B2", "P(Het)")
# find column headings
print.headings <- parseColHeadings(dso_rastelli[[1]]$ColHeadings, rd=dso_rastelli[[1]])
# Make forest plot --
type <- "JPG"
SetPage(orient          = "PORTRAIT",
perpage=2,
type            = type,
filestem        = "Sensitivity/Figure - DSO versus Rastelli",
page_dpi        = 300,
page_pointsize  = 15,
page_height     = 9.5,
page_width      = 9.5,
append_datetime = FALSE,
suppress.date   = TRUE,
titlespace      = 0.06,
footerspace     = 0.01,
footer.cex      = 1.6,
footer          = "\nn = Number of events; N = Sample size; Het = heterogeneity
\n "
)
# Set page margins: format is c(bottom, left, top, right)
par(mar=c(4.14537797266251, 2, 3.14537797266251, 1))
mainfont <- 1.1
# blankPlot(c(0,100),c(0,100), mainfont)
par(xpd=NA)
# Make forest plot --
n_forest   <- length(forest)
# Plot setting --
spacing    <- 0
plot.width <- 25
# plot labels --
xaxmin=33
xaxmax=xaxmin + plot.width
#x position for other headings
other.column.xpos <- c(xaxmin-16, xaxmin-8, xaxmax+16, xaxmax+23, xaxmax+30)
outcomeLabs <- c("A. Mortality", "B. Reintervention")
# Draw forest plot --
locs <- list()
for (cc in seq_along(forest)) {
blankPlot(c(0,100),c(0,100), mainfont)
locs[[cc]] <-
ForestBasic(
forest[[cc]],
LogScale          = FALSE,
ExponentiateDataOnPlot=FALSE,
xaxmin            = xaxmin,
xaxmax            = xaxmax,
xlim              = c(-5, 65),
xticks            = seq(0, 60, 10),
xticks.ticklength = 0.25,
xlab              = c("", "Incidence (%)")[cc],
NLabel            = FALSE,
mainfont          = 1,
ValueLabels       = TRUE,
ValueLabelsHeader = "Incidence (95% CI)\n",
ValueDigits       = 1,
lwd               = 1,
CISecond          = TRUE,
separator         = " - ",
spacing           = spacing,
pointGroupsFactor = 0.9,
verbose           = FALSE,
# boxsizeoverride   = FALSE,
boxparm.stderr    = 2)
# add titles above forest (may be left empty, change labels="" to what you will)
# Draw segment --
segments(
x0  = 0,
x1  = 94,
y0  = 98.4,
y1  = 98.4,
lwd = 1.3,
xpd = FALSE)
#Outcome label --
text(x      = 0,
y      = 117,
labels = outcomeLabs[cc],
col    = "black",
adj    = c(0,0),
font   = 2,
cex    = 1.1)
# left hand column of labels
text(x=0, y=100, labels="Endpoints\n", adj=c(0,0), font=2, cex=1)
text(x=0, y=locs[[cc]]$YLocs, adj=0, cex=1, font=ifelse(forest[[cc]]$IsDiamond, 2,1), labels=left.labels[-blank.rows])
text(x=0, y=locs[[cc]]$BlankLocs, adj=0, font=2, cex=1, labels=left.labels[blank.rows])
# adding other columns for HF and PHD ---
for (jj in seq_along(other.cols)) {
text(x=other.column.xpos[jj], y=105.5, adj=c(0,0), font=2, cex=1, labels=convertUnicode(other.cols.labels[jj]))
text(x      = other.column.xpos[jj],
y      = locs[[cc]]$YLocs,
font   = ifelse(forest[[cc]]$IsDiamond, 2, 1),
adj    = 0,
cex    = 1,
labels = convertUnicode(as.character(dso_rastelli[[cc]][,other.cols[jj]]))[-blank.rows])
text(x      = other.column.xpos[jj],
y      = locs[[cc]]$BlankLocs,
adj    = 0,
cex    = 1,
labels = convertUnicode(as.character(dso_rastelli[[cc]][,other.cols[jj]]))[blank.rows])
}
}
# stop writing to file
closeFile(type)
# Get and bind data for anatomic and physio only
merged_forest <- map(
.x=summary_forest,
~flatten_df(.x) %>% mutate(n_event=paste0(n, "/", N)) %>%
filter(!surgery%in%c("DSO", "Rastelli")))
merged_forest <- map(
.x = merged_forest,
~add_table_header(
data=.x,
group_var=surgery,
group_level_var=time,
extra_space=FALSE) %>%
select(-Endpoint) %>%
dplyr::mutate(
IsDiamond=ifelse(!is.na(incidence), 0, incidence),
FillColour=ifelse(!is.na(incidence)==TRUE, 1, incidence)) %>%
rename(Heading=time) %>%
as.data.frame(.)
)
# set up an object that stores the forest and associated metadata
forest <- map2(
.x=merged_forest,
.y=seq_along(merged_forest),
~FormatForest(
rawdata=rename(.x,
!!paste0("IsDiamond", .y):=IsDiamond,
!!paste0("FillColour", .y):=FillColour),
forest.n    = .y,
EstimateCol = "incidence",
LCICol      = "LCI",
UCICol      = "UCI",
logData     = FALSE,
getBlanks   = TRUE)
)
blank.rows  <- forest[[1]]$blank.rows
# Format headings to incorporate expressions ------
# find labels to put in the left most column
left.labels <- convertUnicode(as.character(merged_forest[[1]]$Heading))
# what other columns should be plotted
other.cols  <- c("n_studies", "n_event", "I2", "tau2", "phet")
other.cols.labels <- c("Studies", "n/N", "I\U00B2", "Tau\U00B2", "P(Het)")
# find column headings
print.headings <- parseColHeadings(merged_forest[[1]]$ColHeadings, rd=merged_forest[[1]])
# Make forest plot --
type <- "JPG"
SetPage(orient          = "PORTRAIT",
perpage=2,
type            = type,
filestem        = "Sensitivity/Summary forest plot main analysis",
page_dpi        = 300,
page_pointsize  = 15,
page_height     = 9.5,
page_width      = 9.5,
append_datetime = FALSE,
suppress.date   = TRUE,
titlespace      = 0.06,
footerspace     = 0.01,
footer.cex      = 1.6,
footer          = "\nn = Number of events; N = Sample size; Het = heterogeneity
\n "
)
# Set page margins: format is c(bottom, left, top, right)
par(mar=c(4.14537797266251, 2, 3.14537797266251, 1))
mainfont <- 1.1
# blankPlot(c(0,100),c(0,100), mainfont)
par(xpd=NA)
# Make forest plot --
n_forest   <- length(forest)
# Plot setting --
spacing    <- 0
plot.width <- 25
# plot labels --
xaxmin=33
xaxmax=xaxmin + plot.width
#x position for other headings
other.column.xpos <- c(xaxmin-16, xaxmin-8, xaxmax+16, xaxmax+23, xaxmax+30)
outcomeLabs <- c("A. Mortality", "B. Reintervention")
# Draw forest plot --
locs <- list()
for (cc in seq_along(forest)) {
blankPlot(c(0,100),c(0,100), mainfont)
locs[[cc]] <-
ForestBasic(
forest[[cc]],
LogScale          = FALSE,
ExponentiateDataOnPlot=FALSE,
xaxmin            = xaxmin,
xaxmax            = xaxmax,
xlim              = c(-5, 45),
xticks            = seq(0, 40, 10),
xticks.ticklength = 0.25,
xlab              = c("", "Incidence (%)")[cc],
NLabel            = FALSE,
mainfont          = 1,
ValueLabels       = TRUE,
ValueLabelsHeader = "Incidence (95% CI)\n",
ValueDigits       = 1,
lwd               = 1,
CISecond          = TRUE,
separator         = " - ",
spacing           = spacing,
pointGroupsFactor = 0.9,
verbose           = FALSE,
# boxsizeoverride   = FALSE,
boxparm.stderr    = 2)
# add titles above forest (may be left empty, change labels="" to what you will)
# Draw segment --
segments(
x0  = 0,
x1  = 94,
y0  = 98.4,
y1  = 98.4,
lwd = 1.3,
xpd = FALSE)
#Outcome label --
text(x      = 0,
y      = 117,
labels = outcomeLabs[cc],
col    = "black",
adj    = c(0,0),
font   = 2,
cex    = 1.1)
# left hand column of labels
text(x=0, y=100, labels="Endpoints\n", adj=c(0,0), font=2, cex=1)
text(x=0, y=locs[[cc]]$YLocs, adj=0, cex=1, font=ifelse(forest[[cc]]$IsDiamond, 2,1), labels=left.labels[-blank.rows])
text(x=0, y=locs[[cc]]$BlankLocs, adj=0, font=2, cex=1, labels=left.labels[blank.rows])
# adding other columns for HF and PHD ---
for (jj in seq_along(other.cols)) {
text(x=other.column.xpos[jj], y=105.5, adj=c(0,0), font=2, cex=1, labels=convertUnicode(other.cols.labels[jj]))
text(x      = other.column.xpos[jj],
y      = locs[[cc]]$YLocs,
font   = ifelse(forest[[cc]]$IsDiamond, 2, 1),
adj    = 0,
cex    = 1,
labels = convertUnicode(as.character(merged_forest[[cc]][,other.cols[jj]]))[-blank.rows])
text(x      = other.column.xpos[jj],
y      = locs[[cc]]$BlankLocs,
adj    = 0,
cex    = 1,
labels = convertUnicode(as.character(merged_forest[[cc]][,other.cols[jj]]))[blank.rows])
}
}
# stop writing to file
closeFile(type)
# Get and bind data for anatomic and physio only
dso_rastelli <- map(
.x=summary_forest,
~flatten_df(.x) %>% mutate(n_event=paste0(n, "/", N)) %>%
filter(surgery%in%c("DSO", "Rastelli")))
dso_rastelli <- map(
.x = dso_rastelli,
~add_table_header(
data=.x,
group_var=surgery,
group_level_var=time,
extra_space=FALSE) %>%
select(-Endpoint) %>%
dplyr::mutate(
IsDiamond=ifelse(!is.na(incidence), 0, incidence),
FillColour=ifelse(!is.na(incidence)==TRUE, 1, incidence)) %>%
rename(Heading=time) %>%
as.data.frame(.)
)
# set up an object that stores the forest and associated metadata
forest <- map2(
.x=dso_rastelli,
.y=seq_along(dso_rastelli),
~FormatForest(
rawdata=rename(.x,
!!paste0("IsDiamond", .y):=IsDiamond,
!!paste0("FillColour", .y):=FillColour),
forest.n    = .y,
EstimateCol = "incidence",
LCICol      = "LCI",
UCICol      = "UCI",
logData     = FALSE,
getBlanks   = TRUE)
)
blank.rows  <- forest[[1]]$blank.rows
# Format headings to incorporate expressions ------
# find labels to put in the left most column
left.labels <- convertUnicode(as.character(dso_rastelli[[1]]$Heading))
# what other columns should be plotted
other.cols  <- c("n_studies", "n_event", "I2", "tau2", "phet")
other.cols.labels <- c("Studies", "n/N", "I\U00B2", "Tau\U00B2", "P(Het)")
# find column headings
print.headings <- parseColHeadings(dso_rastelli[[1]]$ColHeadings, rd=dso_rastelli[[1]])
# Make forest plot --
type <- "JPG"
SetPage(orient          = "PORTRAIT",
perpage=2,
type            = type,
filestem        = "Sensitivity/Figure - DSO versus Rastelli",
page_dpi        = 300,
page_pointsize  = 15,
page_height     = 9.5,
page_width      = 9.5,
append_datetime = FALSE,
suppress.date   = TRUE,
titlespace      = 0.06,
footerspace     = 0.01,
footer.cex      = 1.6,
footer          = "\nn = Number of events; N = Sample size; Het = heterogeneity
\n "
)
# Set page margins: format is c(bottom, left, top, right)
par(mar=c(4.14537797266251, 2, 3.14537797266251, 1))
mainfont <- 1.1
# blankPlot(c(0,100),c(0,100), mainfont)
par(xpd=NA)
# Make forest plot --
n_forest   <- length(forest)
# Plot setting --
spacing    <- 0
plot.width <- 25
# plot labels --
xaxmin=33
xaxmax=xaxmin + plot.width
#x position for other headings
other.column.xpos <- c(xaxmin-16, xaxmin-8, xaxmax+16, xaxmax+23, xaxmax+30)
outcomeLabs <- c("A. Mortality", "B. Reintervention")
# Draw forest plot --
locs <- list()
for (cc in seq_along(forest)) {
blankPlot(c(0,100),c(0,100), mainfont)
locs[[cc]] <-
ForestBasic(
forest[[cc]],
LogScale          = FALSE,
ExponentiateDataOnPlot=FALSE,
xaxmin            = xaxmin,
xaxmax            = xaxmax,
xlim              = c(-5, 45),
xticks            = seq(0, 40, 10),
xticks.ticklength = 0.25,
xlab              = c("", "Incidence (%)")[cc],
NLabel            = FALSE,
mainfont          = 1,
ValueLabels       = TRUE,
ValueLabelsHeader = "Incidence (95% CI)\n",
ValueDigits       = 1,
lwd               = 1,
CISecond          = TRUE,
separator         = " - ",
spacing           = spacing,
pointGroupsFactor = 0.9,
verbose           = FALSE,
# boxsizeoverride   = FALSE,
boxparm.stderr    = 2)
# add titles above forest (may be left empty, change labels="" to what you will)
# Draw segment --
segments(
x0  = 0,
x1  = 94,
y0  = 98.4,
y1  = 98.4,
lwd = 1.3,
xpd = FALSE)
#Outcome label --
text(x      = 0,
y      = 117,
labels = outcomeLabs[cc],
col    = "black",
adj    = c(0,0),
font   = 2,
cex    = 1.1)
# left hand column of labels
text(x=0, y=100, labels="Endpoints\n", adj=c(0,0), font=2, cex=1)
text(x=0, y=locs[[cc]]$YLocs, adj=0, cex=1, font=ifelse(forest[[cc]]$IsDiamond, 2,1), labels=left.labels[-blank.rows])
text(x=0, y=locs[[cc]]$BlankLocs, adj=0, font=2, cex=1, labels=left.labels[blank.rows])
# adding other columns for HF and PHD ---
for (jj in seq_along(other.cols)) {
text(x=other.column.xpos[jj], y=105.5, adj=c(0,0), font=2, cex=1, labels=convertUnicode(other.cols.labels[jj]))
text(x      = other.column.xpos[jj],
y      = locs[[cc]]$YLocs,
font   = ifelse(forest[[cc]]$IsDiamond, 2, 1),
adj    = 0,
cex    = 1,
labels = convertUnicode(as.character(dso_rastelli[[cc]][,other.cols[jj]]))[-blank.rows])
text(x      = other.column.xpos[jj],
y      = locs[[cc]]$BlankLocs,
adj    = 0,
cex    = 1,
labels = convertUnicode(as.character(dso_rastelli[[cc]][,other.cols[jj]]))[blank.rows])
}
}
# stop writing to file
closeFile(type)
